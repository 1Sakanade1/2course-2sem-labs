{"ast":null,"code":"import { connect } from 'react-redux';\nimport { toggleTodo } from '../actions';\nimport TodoList from '../components/ToDoList';\nimport { VisibilityFilters } from '../actions';\nconst getVisibleTodos = (todos, filter) => {\n  switch (filter) {\n    case VisibilityFilters.SHOW_ALL:\n      return todos;\n    case VisibilityFilters.SHOW_COMPLETED:\n      return todos.filter(t => t.completed);\n    case VisibilityFilters.SHOW_ACTIVE:\n      return todos.filter(t => !t.completed);\n    default:\n      throw new Error('Unknown filter: ' + filter);\n  }\n};\nconst mapStateToProps = state => ({\n  todos: getVisibleTodos(state.todos, state.visibilityFilter)\n});\nconst mapDispatchToProps = dispatch => ({\n  toggleTodo: id => dispatch(toggleTodo(id))\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);","map":{"version":3,"names":["connect","toggleTodo","TodoList","VisibilityFilters","getVisibleTodos","todos","filter","SHOW_ALL","SHOW_COMPLETED","t","completed","SHOW_ACTIVE","Error","mapStateToProps","state","visibilityFilter","mapDispatchToProps","dispatch","id"],"sources":["C:/Users/User/Desktop/JS/laba9/src/containers/VisibleToDoList.tsx"],"sourcesContent":["import { connect } from 'react-redux';\r\nimport { toggleTodo } from '../actions';\r\nimport TodoList from '../components/ToDoList';\r\nimport { VisibilityFilters } from '../actions';\r\n\r\ninterface Todo {\r\n  id: number;\r\n  text: string;\r\n  completed: boolean;\r\n}\r\n\r\ninterface Props {\r\n  todos: Todo[];\r\n  toggleTodo: (id: number) => void;\r\n}\r\n\r\nconst getVisibleTodos = (todos: Todo[], filter: string): Todo[] => {\r\n  switch (filter) {\r\n    case VisibilityFilters.SHOW_ALL:\r\n      return todos;\r\n    case VisibilityFilters.SHOW_COMPLETED:\r\n      return todos.filter((t) => t.completed);\r\n    case VisibilityFilters.SHOW_ACTIVE:\r\n      return todos.filter((t) => !t.completed);\r\n    default:\r\n      throw new Error('Unknown filter: ' + filter);\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state: { todos: Todo[], visibilityFilter: string }): { todos: Todo[] } => ({\r\n    todos: getVisibleTodos(\r\n      state.todos,\r\n      state.visibilityFilter\r\n    ),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Function): { toggleTodo: (id: number) => void } => ({\r\n    toggleTodo: (id: number) => dispatch(toggleTodo(id)),\r\n});\r\n\r\nexport default connect<Props, {toggleTodo: (id: number) => void}, {}, {todos: Todo[]}>(\r\n    mapStateToProps as any,\r\n    mapDispatchToProps\r\n)(TodoList);"],"mappings":"AAAA,SAASA,OAAO,QAAQ,aAAa;AACrC,SAASC,UAAU,QAAQ,YAAY;AACvC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,SAASC,iBAAiB,QAAQ,YAAY;AAa9C,MAAMC,eAAe,GAAGA,CAACC,KAAa,EAAEC,MAAc,KAAa;EACjE,QAAQA,MAAM;IACZ,KAAKH,iBAAiB,CAACI,QAAQ;MAC7B,OAAOF,KAAK;IACd,KAAKF,iBAAiB,CAACK,cAAc;MACnC,OAAOH,KAAK,CAACC,MAAM,CAAEG,CAAC,IAAKA,CAAC,CAACC,SAAS,CAAC;IACzC,KAAKP,iBAAiB,CAACQ,WAAW;MAChC,OAAON,KAAK,CAACC,MAAM,CAAEG,CAAC,IAAK,CAACA,CAAC,CAACC,SAAS,CAAC;IAC1C;MACE,MAAM,IAAIE,KAAK,CAAC,kBAAkB,GAAGN,MAAM,CAAC;EAChD;AACF,CAAC;AAED,MAAMO,eAAe,GAAIC,KAAkD,KAAyB;EAChGT,KAAK,EAAED,eAAe,CACpBU,KAAK,CAACT,KAAK,EACXS,KAAK,CAACC,gBACR;AACJ,CAAC,CAAC;AAEF,MAAMC,kBAAkB,GAAIC,QAAkB,KAA4C;EACtFhB,UAAU,EAAGiB,EAAU,IAAKD,QAAQ,CAAChB,UAAU,CAACiB,EAAE,CAAC;AACvD,CAAC,CAAC;AAEF,eAAelB,OAAO,CAClBa,eAAe,EACfG,kBACJ,CAAC,CAACd,QAAQ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}