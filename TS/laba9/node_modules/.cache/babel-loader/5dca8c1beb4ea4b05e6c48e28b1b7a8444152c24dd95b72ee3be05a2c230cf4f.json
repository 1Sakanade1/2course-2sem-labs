{"ast":null,"code":"const todos = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'ADD_TODO':\n      return [...state, {\n        id: action.id,\n        text: action.text,\n        completed: false\n      }];\n    case 'TOGGLE_TODO':\n      return state.map(todo => todo.id === action.id ? {\n        ...todo,\n        completed: !todo.completed\n      } : todo);\n    default:\n      return state;\n  }\n};\nexport default todos;","map":{"version":3,"names":["todos","state","arguments","length","undefined","action","type","id","text","completed","map","todo"],"sources":["C:/Users/USER/Desktop/labs/4сем/трпи/laba99/src/reducers/todos.tsx"],"sourcesContent":["interface Todo {\r\n  id: number;\r\n  text: string;\r\n  completed: boolean;\r\n}\r\n\r\ntype Action = { type: 'ADD_TODO'; id: number; text: string } | { type: 'TOGGLE_TODO'; id: number };\r\n\r\nconst todos = (state: Todo[] = [], action: Action): Todo[] => {\r\n  switch (action.type) {\r\n    case 'ADD_TODO':\r\n      return [\r\n        ...state,\r\n        {\r\n          id: action.id,\r\n          text: action.text,\r\n          completed: false\r\n        }\r\n      ];\r\n    case 'TOGGLE_TODO':\r\n      return state.map(todo =>\r\n        (todo.id === action.id)\r\n          ? {...todo, completed: !todo.completed}\r\n          : todo\r\n      );\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default todos;"],"mappings":"AAQA,MAAMA,KAAK,GAAG,SAAAA,CAAA,EAAgD;EAAA,IAA/CC,KAAa,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAAA,IAAEG,MAAc,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC/C,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAK,UAAU;MACb,OAAO,CACL,GAAGL,KAAK,EACR;QACEM,EAAE,EAAEF,MAAM,CAACE,EAAE;QACbC,IAAI,EAAEH,MAAM,CAACG,IAAI;QACjBC,SAAS,EAAE;MACb,CAAC,CACF;IACH,KAAK,aAAa;MAChB,OAAOR,KAAK,CAACS,GAAG,CAACC,IAAI,IAClBA,IAAI,CAACJ,EAAE,KAAKF,MAAM,CAACE,EAAE,GAClB;QAAC,GAAGI,IAAI;QAAEF,SAAS,EAAE,CAACE,IAAI,CAACF;MAAS,CAAC,GACrCE,IACN,CAAC;IACH;MACE,OAAOV,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}